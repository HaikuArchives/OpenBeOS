BFS - ToDo, April 10th, 2002
-----

BlockAllocator

 - the BlockAllocator is only slightly optimized and probably slow
 - the first free and the largest range are currently not correctly maintained (only efficiency suffers - it does work correctly)
 - the allocation policies will have to stand against some real world tests
 - the access to the block bitmap is currently managed using a global lock
 - the updated disk's super block is not written back yet (used block counter)


DataStream

 - growing/shrinking the stream size is not implemented for the double indirect range
 - if something fails, the stream is not trimmed back

Queries

 - There shouldn't be any cases where you can speed up a query with reordering
   the query expression - test it
 - Check permissions of the parent directories


Journal

 - The transaction class currently does nothing else than writing the blocks
   directly to disk.


BPlusTree

 - BPlusTree::Remove() could trigger CachedNode::Free() to go through the free nodes list and free all pages at the end of the data stream
 - inserting/removing duplicates is not yet implemented

Indices

 - are not yet updated


Attributes

 - bfs_write_attr() doesn't check if the attribute data may fit into the small_data region if there already is that attribute as an attribute file


Volume

 - can't write super block yet (i.e. in bfs_write_fs_stat())
 - needs a lock to protect the super block


general stuff

 - if any transaction that changes an inode fails, the changed inode is still in memory and had to be reloaded or the changes be undone...
 - much more stuff for full write capabilities ...
 - There is still much locking missing
 - There are also some comments with a leading "ToDo:" directly in the code which may not be mentioned here.

-----
Axel DÃ¶rfler
axeld@pinc-software.de
